{"version":3,"sources":["components/SidebarData.js","components/NavbarComponent.js","actions/inventoryAction.js","components/TableLoggingFullAccess.js","components/TableLoggingLimited.js","containers/LoggingContainer.js","components/BackComponent.js","validations/InventoryValidation.js","components/FormCreate.js","containers/CreateInventoryContainer.js","components/FormInventory.js","containers/EditInventoryContainer.js","components/FormLogging.js","containers/EditLoggingContainer.js","components/DetailLoggingComponent.js","containers/DetailLoggingContainer.js","components/DetailInventoryComponent.js","containers/DetailInventoryContainer.js","components/TableInventoryLimited.js","components/TableInventoryFullAccess.js","containers/InventoryContainer.js","containers/ProfilContainer.js","img/main.jpg","containers/LoginContainer.js","components/AnalitikComponent.js","containers/AnalitikContainer.js","containers/LogoutContainer.js","containers/my404.js","App.js","serviceWorker.js","reducers/inventorys.js","reducers/index.js","index.js"],"names":["SidebarData","title","path","icon","cName","NavbarComponent","useState","sidebar","setSidebar","showSidebar","Provider","value","color","className","to","onClick","map","item","index","GET_INVENTORY_LIST","GET_INVENTORY_DETAIL","POST_INVENTORY_CREATE","PUT_INVENTORY_EDIT","GET_LOGGING_LIST","PUT_LOGGING_EDIT","GET_LOGGING_DETAIL","url","header","headers","Authorization","localStorage","getItem","getInventoryList","dispatch","axios","get","then","response","console","log","type","payload","data","Inventory","errorMessage","catch","error","message","getLoggingList","logging","getInventoryDetail","logical_uid","deleteLogging","id","delete","getLoggingDetail","SearchBar","Search","defaultSorted","dataField","order","connect","state","inventorys","errorLoggingList","HitungLogging","length","props","columns","text","sort","align","headerStyle","width","backgroundColor","formatter","rowContent","row","Button","faInfo","faEdit","swal","buttons","dangerMode","willDelete","faTrash","Container","Row","Col","bootstrap4","keyField","search","searchProps","placeholder","baseProps","pagination","paginationFactory","Spinner","LoggingContainer","token","roleuser","loggedin","this","Component","withRouter","history","goBack","faArrowLeft","InventoryValidation","values","errors","name","nama","qty","qrt","renderField","input","label","disabled","readOnly","meta","touched","warning","md","Label","htmlFor","Input","style","FormCreate","onSubmit","handleSubmit","FormGroup","Field","component","submitting","reduxForm","form","validate","enableReinitialize","initialValues","status","CreateInventoryContainer","post","inventory","postInventoryCreate","getResponDataInventory","errorResponDataInventory","jumlah","BackComponent","FormInventory","EditInventoryContainer","match","params","put","putInventoryUpdate","FormLogging","warehouse","time","EditLoggingContainer","putLoggingUpdate","getResponDataLogging","errorResponDataLogging","errorLoggingDetail","Table","striped","DetailLoggingContainer","errorInventoryDetail","DetailInventoryContainer","errorInventoryList","errorInventorysList","handleClick","deleteInventory","noDataIndication","InventoryContainer","ProfilContainer","Card","class","Body","Header","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","paperStyle","padding","height","backgroundImage","Image","avatarStyle","btnstyle","mystyle","fontFamily","LoginContainer","e","preventDefault","username","password","res","setItem","user","user_permissions","setState","window","location","reload","err","Grid","Paper","elevation","Avatar","large","InputLabel","startAdornment","InputAdornment","position","autoComplete","target","variant","fullWidth","HitungInventory","x","y","z","a","b","c","i","Title","AnalitikContainer","LogoutContainer","removeItem","my404","href","App","exact","Boolean","hostname","initialState","hitungLogging","action","combineReducers","formReducer","store","createStore","reducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5380310d.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\n \r\nexport const SidebarData = [\r\n  {\r\n    title: 'Logging',\r\n    path: '/Logging',\r\n    icon: <AiIcons.AiTwotoneHome />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Analitik',\r\n    path: '/Analitik',\r\n    icon: <IoIcons.IoIosPaper />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Daftar Inventory',\r\n    path: '/Inventory',\r\n    icon: <FaIcons.FaList />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Profil',\r\n    path: '/Profil',\r\n    icon: <IoIcons.IoMdPeople />,\r\n    cName: 'nav-text'\r\n  },\r\n  {\r\n    title: 'Logout',\r\n    path: '/Logout',\r\n    icon: <AiIcons.AiOutlineLogout />,\r\n    cName: 'nav-text'\r\n  },\r\n  \r\n];","import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { SidebarData } from './SidebarData';\nimport './Navbar.css';\nimport { IconContext } from 'react-icons';\n\nfunction NavbarComponent() {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n\n  return (\n    <>\n      <IconContext.Provider value={{ color: '#fff' }}>\n        <div className='navbar'>\n          <Link to='#' className='menu-bars'>\n            <FaIcons.FaBars onClick={showSidebar} />\n          </Link>\n        </div>\n        <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n          <ul className='nav-menu-items' onClick={showSidebar}>\n            <li className='navbar-toggle'>\n              <Link to='#' className='menu-bars'>\n                <AiIcons.AiOutlineClose />\n              </Link>\n            </li>\n            {SidebarData.map((item, index) => {\n              return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default NavbarComponent;","import axios from \"axios\";\n\nexport const GET_INVENTORY_LIST = \"GET_INVENTORY_LIST\";\nexport const GET_INVENTORY_DETAIL = \"GET_INVENTORY_DETAIL\";\nexport const POST_INVENTORY_CREATE = \"POST_INVENTORY_CREATE\";\nexport const PUT_INVENTORY_EDIT = \"PUT_INVENTORY_EDIT\";\nexport const GET_LOGGING_LIST = \"GET_LOGGING_LIST\";\nexport const PUT_LOGGING_EDIT = \"PUT_LOGGING_EDIT\";\nexport const GET_LOGGING_DETAIL = \"GET_LOGGING_DETAIL\";\n\nlet url = \"https://smpnapi.herokuapp.com/api/v3/\";\nlet header = {\n  headers: {\n    Authorization: `JWT ${localStorage.getItem(\"token\")}`,\n  },\n};\n\n//MUNCULIN LIST DATA INVENTORY\nexport const getInventoryList = () => {\n  return (dispatch) => {\n    axios\n      .get(url + \"inventory/\", header)\n      .then(function (response) {\n        console.log(response);\n        dispatch({\n          type: GET_INVENTORY_LIST,\n          payload: {\n            data: response.data.Inventory,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: GET_INVENTORY_LIST,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\n//MUNCULIN LIST DATA LOGGING IN ATAU OUT\nexport const getLoggingList = () => {\n  return (dispatch) => {\n    axios\n      .get(url + \"logging/\", header)\n      .then(function (response) {\n        dispatch({\n          type: GET_LOGGING_LIST,\n          payload: {\n            data: response.data.logging,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: GET_LOGGING_LIST,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\n//BUAT DETAIL DATA 1 INVENTORY\nexport const getInventoryDetail = (logical_uid) => {\n  return (dispatch) => {\n    axios\n      .get(url + \"inventory/detail/\" + logical_uid, header)\n      .then(function (response) {\n        console.log(response);\n        dispatch({\n          type: GET_INVENTORY_DETAIL,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: GET_INVENTORY_DETAIL,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\nexport const postInventoryCreate = (data) => {\n  return (dispatch) => {\n    axios\n      .post(url + \"inventory/\", data, header)\n      .then(function (response) {\n        console.log(response);\n\n        dispatch({\n          type: POST_INVENTORY_CREATE,\n          payload: {\n            data: response.data.inventory,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: POST_INVENTORY_CREATE,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\nexport const deleteInventory = (logical_uid) => {\n  return (dispatch) => {\n    axios\n      .delete(url + \"inventory/delete/\" + logical_uid, header)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\nexport const deleteDataInventory = () => {\n  return (dispatch) => {\n    dispatch({\n      type: GET_INVENTORY_DETAIL,\n      payload: {\n        data: false,\n        errorMessage: false,\n      },\n    });\n\n    dispatch({\n      type: POST_INVENTORY_CREATE,\n      payload: {\n        data: false,\n        errorMessage: false,\n      },\n    });\n  };\n};\n\n//update inventory\nexport const putInventoryUpdate = (data, id) => {\n  return (dispatch) => {\n    axios\n      .put(url + \"inventory/update/\" +id,data, header\n      )\n      .then(function (response) {\n        console.log(response);\n        \n        dispatch({\n          type: PUT_INVENTORY_EDIT,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: PUT_INVENTORY_EDIT,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\n\nexport const deleteLogging = (id) => {\n  return (dispatch) => {\n    axios\n      .delete(url + \"logging/delete/\" + id, header)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n};\n\n//update logging\nexport const putLoggingUpdate = (data, id) => {\n  return (dispatch) => {\n    axios\n      .put(url + \"logging/update/\" + id,data, header\n      )\n      .then(function (response) {\n        console.log(response);\n        \n        dispatch({\n          type: PUT_LOGGING_EDIT,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: PUT_LOGGING_EDIT,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};\n\n//BUAT DETAIL DATA 1 INVENTORY\nexport const getLoggingDetail = (id) => {\n  return (dispatch) => {\n    axios\n      .get(url + \"logging/detail/\" + id, header)\n      .then(function (response) {\n        console.log(response);\n        dispatch({\n          type: GET_LOGGING_DETAIL,\n          payload: {\n            data: response.data,\n            errorMessage: false,\n          },\n        });\n      })\n      .catch(function (error) {\n        dispatch({\n          type: GET_LOGGING_DETAIL,\n          payload: {\n            data: false,\n            errorMessage: error.message,\n          },\n        });\n      });\n  };\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"reactstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfo, faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport swal from \"sweetalert\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { deleteLogging } from \"../actions/inventoryAction\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoggingList: state.inventorys.getLoggingList,\n    errorLoggingList: state.inventorys.errorLoggingList,\n    HitungLogging: state.inventorys.getLoggingList.length, //HITUNG JUMLAH DATA LOGGING\n  };\n};\n\nconst handleClick = (dispatch, id) => {\n  swal({\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true,\n  }).then((willDelete) => {\n    if (willDelete) {\n      dispatch(deleteLogging(id));\n      swal(\"Data Inventory Sukses dihapus\", {\n        icon: \"success\",\n      });\n    } else {\n      swal(\"Data gagal dihapus\");\n    }\n  });\n};\n\nconst { SearchBar } = Search;\nconst defaultSorted = [\n  {\n    dataField: \"id\",\n    order: \"asc\",\n  },\n];\n\nconst TableLoggingFullAccess = (props) => {\n  const columns = [\n  \n    {\n      dataField: \"id\",\n      text: \"id\",\n      sort: true,\n      align:'center',\n      headerStyle: () => {\n        return { width: \"5%\",\n      backgroundColor: '#2D93B9' };\n      },\n    },\n    {\n      dataField: \"logical_uid\",\n      text: \"UID\", \n      sort: true,\n      headerStyle: () => {\n        return { width: \"15%\",\n      backgroundColor: '#2D93B9',\n    };\n      },\n    },\n    {\n      dataField: \"qty\",\n      text: \"Jumlah\",\n      sort: true,\n      align:'center',\n      headerStyle: () => {\n        return { \n      backgroundColor: '#2D93B9' };\n      },\n    },\n    {\n      dataField: \"time\",\n      text: \"Waktu\",\n      sort: true,\n      align:'center',\n      headerStyle: () => {\n        return { \n      backgroundColor: '#2D93B9',\n      width: \"20%\"\n   };\n      },\n    },\n    {\n      dataField: \"warehouse\",\n      text: \"Warehouse\",\n      sort: true,\n      headerStyle: () => {\n        return { \n      backgroundColor: '#2D93B9' };\n      },\n    },\n    {\n      dataField: \"link\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { width: \"30%\" ,\n        backgroundColor:'#2D93B9'};\n      },\n      formatter: (rowContent, row) => {\n        return (\n          <div>\n            <Link to={\"DetailLogging/\" + row.id}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faInfo} /> Detail\n              </Button>\n            </Link>\n\n            <Link to={\"EditLogging/\" + row.id}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faEdit} /> Edit\n              </Button>\n            </Link>\n\n            <Button\n              color=\"dark\"\n              className=\"mr-2\"\n              onClick={() => handleClick(props.dispatch, row.id)}\n            >\n              <FontAwesomeIcon icon={faTrash} /> Delete\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Container>\n      {props.getLoggingList ? (\n        <div>\n          <div align=\"center\">\n            <Row>\n              <Col>\n              <br></br>\n             </Col>\n            </Row>\n          </div>\n          <br />\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={props.getLoggingList}\n            columns={columns}\n            defaultSorted={defaultSorted}\n            search\n          >\n            {(props) => (\n              <div>\n                <Row>\n                  <Col>\n                    <div className=\"float-right\">\n                      <SearchBar {...props.searchProps} placeholder=\"Cari..\" />\n                                            \n                    </div>\n                  </Col>\n                </Row>\n                <BootstrapTable\n                  {...props.baseProps}\n                  pagination={paginationFactory()}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </div>\n      ) : (\n        <div className=\"text-center\">\n          {props.errorLoggingList ? (\n            <h4>{props.errorLoggingList}</h4>\n          ) : (\n            <Spinner color=\"dark\" />\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default connect(mapStateToProps, null)(TableLoggingFullAccess);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"reactstrap\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoggingList: state.inventorys.getLoggingList,\n    errorLoggingList: state.inventorys.errorLoggingList,\n    HitungLogging: state.inventorys.getLoggingList.length, //HITUNG JUMLAH DATA LOGGING\n  };\n};\n\n\nconst { SearchBar } = Search;\nconst defaultSorted = [\n  {\n    dataField: \"id\",\n    order: \"asc\",\n  },\n];\n\nconst TableLoggingLimited = (props) => {\n \n    const columns = [\n  \n      {\n        dataField: \"id\",\n        text: \"id\",\n        sort: true,\n        align:'center',\n        headerStyle: () => {\n          return { width: \"5%\",\n        backgroundColor: '#2D93B9' };\n        },\n      },\n      {\n        dataField: \"logical_uid\",\n        text: \"UID\", \n        sort: true,\n        headerStyle: () => {\n          return { width: \"15%\",\n        backgroundColor: '#2D93B9',\n      };\n        },\n      },\n      {\n        dataField: \"qty\",\n        text: \"Jumlah\",\n        sort: true,\n        align:'center',\n        headerStyle: () => {\n          return { \n        backgroundColor: '#2D93B9' };\n        },\n      },\n      {\n        dataField: \"time\",\n        text: \"Waktu\",\n        sort: true,\n        align:'center',\n        headerStyle: () => {\n          return { \n        backgroundColor: '#2D93B9',\n        width: \"20%\"\n     };\n        },\n      },\n      {\n        dataField: \"warehouse\",\n        text: \"Warehouse\",\n        sort: true,\n        headerStyle: () => {\n          return { \n        backgroundColor: '#2D93B9' };\n        },\n      },\n      {\n        dataField: \"link\",\n        text: \"Action\",\n        headerStyle: () => {\n          return { width: \"10\" ,\n          backgroundColor:'#2D93B9'};\n        },\n      formatter: (rowContent, row) => {\n        return (\n          <div align=\"center\">\n            <Link to={\"DetailLogging/\" + row.id}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faInfo} /> Detail\n              </Button>\n            </Link>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Container>\n      {props.getLoggingList ? (\n        <div>\n          <div align=\"center\">\n            <Row>\n              <Col>\n              <br></br>\n              </Col>\n            </Row>\n          </div>\n          <br />\n          <ToolkitProvider\n            bootstrap4\n            keyField=\"id\"\n            data={props.getLoggingList}\n            columns={columns}\n            defaultSorted={defaultSorted}\n            search\n          >\n            {(props) => (\n              <div>\n                <Row>\n                  <Col>\n                    <div className=\"float-right\">\n                      <SearchBar {...props.searchProps} placeholder=\"Cari..\" />\n                    </div>\n                  </Col>\n                </Row>\n                <BootstrapTable\n                  {...props.baseProps}\n                  pagination={paginationFactory()}\n                />\n              </div>\n            )}\n          </ToolkitProvider>\n        </div>\n      ) : (\n        <div className=\"text-center\">\n          {props.errorLoggingList ? (\n            <h4>{props.errorLoggingList}</h4>\n          ) : (\n            <Spinner color=\"dark\" />\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default connect(mapStateToProps, null)(TableLoggingLimited);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport TableLoggingFullAccess from \"../components/TableLoggingFullAccess\";\nimport TableLoggingLimited from \"../components/TableLoggingLimited\";\nimport { getLoggingList, deleteLogging } from \"../actions/inventoryAction\";\n\nclass LoggingContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    const roleuser = localStorage.getItem(\"roleuser\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n    \n\n    this.state = {\n      loggedin,\n      roleuser,\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getLoggingList());\n    this.props.dispatch(deleteLogging());\n  }\n\n\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.state.roleuser === \"29,30,31,32,33,34,35,36\") {\n      return (\n        <div>\n          <NavbarComponent />\n          <TableLoggingFullAccess />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <NavbarComponent />\n          <TableLoggingLimited />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect()(LoggingContainer);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Row, Col, Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default withRouter(({ history }) => {\n  return (\n    <div>\n      <Row className=\"mb-2\">\n        <Col>\n          <br></br><br></br>\n          <Button color=\"dark\" onClick={() => history.goBack()}>\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n});\n","const InventoryValidation = (values) => {\n  const errors = {};\n\n  if (!values.name || values.name === \"\") {\n    errors.nama = \"Nama harus diisi\";\n  }\n\n  if (!values.qty || values.qrt === \"\") {\n    errors.qty = \"Jumlah harus diisi\";\n  }\n\n  return errors\n};\n\nexport default InventoryValidation;\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\nimport InventoryValidation from \"../validations/InventoryValidation\";\n\nconst renderField = ({\n  input,\n  type,\n  placeholder,\n  label,\n  disabled,\n  readOnly,\n  meta: { touched, error, warning },\n}) => (\n  <Row>\n    <Col md=\"12\">\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\n        {label}\n      </Label>\n    </Col>\n    <Col md=\"12\">\n      <Input\n        {...input}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        readOnly={readOnly}\n      ></Input>\n      {touched &&\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\n    </Col>\n  </Row>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    initialValues: {\n      logical_uid: state.inventorys.getInventoryDetail.logical_uid,\n      name: state.inventorys.getInventoryDetail.name,\n      qty: state.inventorys.getInventoryDetail.qty,\n      status: state.inventorys.getInventoryDetail.status,\n    },\n  };\n};\n\nclass FormCreate extends Component {\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <FormGroup row>\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"logical_uid\"\n                component={renderField}\n                label=\"Logical UID :\"\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                component={renderField}\n                label=\"Nama :\"\n              />\n            </FormGroup>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"qty\"\n                component={renderField}\n                label=\"Jumlah :\"\n              />\n            </FormGroup>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Col md=\"12\">\n            <FormGroup>\n              <Button\n                color=\"dark\"\n                type=\"submit\"\n                disabled={this.props.submitting}\n              >\n                Submit\n              </Button>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n      </form>\n    );\n  }\n}\n\nFormCreate  = reduxForm({\n  form: \"formCreateInventory\",\n  validate: InventoryValidation,\n  enableReinitialize: true,\n})(FormCreate);\nexport default connect(mapStateToProps, null)(FormCreate);\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport BackComponent from \"../components/BackComponent\";\nimport FormCreate from \"../components/FormCreate\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport { connect } from \"react-redux\";\nimport { postInventoryCreate } from \"../actions/inventoryAction\";\nimport swal from \"sweetalert\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getResponDataInventory: state.inventorys.getResponDataInventory,\n    errorResponDataInventory: state.inventorys.errorResponDataInventory,\n  };\n};\n\nclass CreateInventoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n  handleSubmit(data) {\n    this.props.dispatch(postInventoryCreate(data));\n  }\n\n  render() {\n    if (\n      this.props.getResponDataInventory ||\n      this.props.errorResponDataInventory\n    ) {\n      if (this.props.errorResponDataInventory) {\n        swal(\"Failed!\", this.props.errorResponDataInventory, \"error\");\n      } else {\n        swal(\n          \"Inventory Created!\",\n          \"Nama : \" +\n            this.props.getResponDataInventory.name +\n            \" , Jumlah : \" +\n            this.props.getResponDataInventory.jumlah,\n          \"success\"\n        );\n      }\n    }\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <NavbarComponent />\n        <Container>\n          <BackComponent />\n          <h1 align=\"center\">Create Inventory</h1> <br></br>\n          <FormCreate onSubmit={(data) => this.handleSubmit(data)} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(CreateInventoryContainer);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\nimport InventoryValidation from \"../validations/InventoryValidation\";\n\nconst renderField = ({\n  input,\n  type,\n  placeholder,\n  label,\n  disabled,\n  readOnly,\n  meta: { touched, error, warning },\n}) => (\n  <Row>\n    <Col md=\"12\">\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\n        {label}\n      </Label>\n    </Col>\n    <Col md=\"12\">\n      <Input\n        {...input}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        readOnly={readOnly}\n      ></Input>\n      {touched &&\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\n    </Col>\n  </Row>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    initialValues: {\n      logical_uid: state.inventorys.getInventoryDetail.logical_uid,\n      name: state.inventorys.getInventoryDetail.name,\n      qty: state.inventorys.getInventoryDetail.qty,\n      status: state.inventorys.getInventoryDetail.status,\n    },\n  };\n};\n\nclass FormInventory extends Component {\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <FormGroup row>\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                component={renderField}\n                label=\"Nama :\"\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"qty\"\n                component={renderField}\n                label=\"Jumlah :\"\n              />\n            </FormGroup>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Col md=\"12\">\n            <FormGroup>\n              <Button\n                color=\"dark\"\n                type=\"submit\"\n                disabled={this.props.submitting}\n              >\n                Submit\n              </Button>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n      </form>\n    );\n  }\n}\n\nFormInventory  = reduxForm({\n  form: \"formCreateInventory\",\n  validate: InventoryValidation,\n  enableReinitialize: true,\n})(FormInventory);\nexport default connect(mapStateToProps, null)(FormInventory);\n","import BackComponent from \"../components/BackComponent\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport { Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport FormInventory from \"../components/FormInventory\";\nimport {\n  getInventoryDetail,\n  putInventoryUpdate,\n} from \"../actions/inventoryAction\";\nimport swal from \"sweetalert\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getResponDataInventory: state.inventorys.getResponDataInventory,\n    errorResponDataInventory: state.inventorys.errorResponDataInventory,\n  };\n};\n\nclass EditInventoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(\n      getInventoryDetail(this.props.match.params.logical_uid)\n    );\n  }\n\n  handleSubmit(data) {\n    this.props.dispatch(\n      putInventoryUpdate(data, this.props.match.params.logical_uid)\n    );\n  }\n\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.getResponDataInventory ||\n      this.props.errorResponDataInventory\n    ) {\n      if (this.props.errorResponDataInventory) {\n        swal(\"Failed!\", this.props.errorResponDataInventory, \"error\");\n      } else {\n        swal(\n          \"Inventory Updated!\",\n          \"Nama : \" +\n            this.props.getResponDataInventory.name +\n            \" , Jumlah : \" +\n            this.props.getResponDataInventory.qty,\n          \"success\"\n        );\n      }\n    }\n    return (\n      <div>\n        <NavbarComponent />\n        <Container>\n          <BackComponent />\n          <h1 align=\"center\">Edit Inventory</h1> <br></br>\n          <FormInventory onSubmit={(data) => this.handleSubmit(data)} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(EditInventoryContainer);\n","import React, { Component } from \"react\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\nimport InventoryValidation from \"../validations/InventoryValidation\";\n\nconst renderField = ({\n  input,\n  type,\n  placeholder,\n  label,\n  disabled,\n  readOnly,\n  meta: { touched, error, warning },\n}) => (\n  <Row>\n    <Col md=\"12\">\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\n        {label}\n      </Label>\n    </Col>\n    <Col md=\"12\">\n      <Input\n        {...input}\n        type={type}\n        placeholder={placeholder}\n        disabled={disabled}\n        readOnly={readOnly}\n      ></Input>\n      {touched &&\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\n    </Col>\n  </Row>\n);\n\nconst mapStateToProps = (state) => {\n  return {\n    initialValues: {\n      id: state.inventorys.getLoggingDetail.id,\n      warehouse: state.inventorys.getLoggingDetail.warehouse,\n      qty: state.inventorys.getLoggingDetail.qty,\n      status: state.inventorys.getLoggingDetail.status,\n      time: state.inventorys.getLoggingDetail.time,\n    },\n  };\n};\n\nclass FormLogging extends Component {\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <FormGroup row>\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"warehouse\"\n                component={renderField}\n                label=\"Warehouse :\"\n              />\n            </FormGroup>\n          </Col>\n\n          <Col md={6}>\n            <FormGroup>\n              <Field\n                type=\"text\"\n                name=\"qty\"\n                component={renderField}\n                label=\"Jumlah :\"\n              />\n            </FormGroup>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Col md=\"12\">\n            <FormGroup>\n              <Button\n                color=\"dark\"\n                type=\"submit\"\n                disabled={this.props.submitting}\n              >\n                Submit\n              </Button>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n      </form>\n    );\n  }\n}\n\nFormLogging  = reduxForm({\n  form: \"formCreateInventory\",\n  validate: InventoryValidation,\n  enableReinitialize: true,\n})(FormLogging);\nexport default connect(mapStateToProps, null)(FormLogging);\n","import BackComponent from \"../components/BackComponent\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport { Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport FormLogging from \"../components/FormLogging\";\nimport { getLoggingDetail, putLoggingUpdate } from \"../actions/inventoryAction\";\nimport swal from \"sweetalert\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getResponDataLogging: state.inventorys.getResponDataLogging,\n    errorResponDataLogging: state.inventorys.errorResponDataLogging,\n  };\n};\n\nclass EditLoggingContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getLoggingDetail(this.props.match.params.id));\n  }\n\n  handleSubmit(data) {\n    this.props.dispatch(putLoggingUpdate(data, this.props.match.params.id));\n  }\n\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.getResponDataLogging || this.props.errorResponDataLogging) {\n      if (this.props.errorResponDataLogging) {\n        swal(\"Failed!\", this.props.errorResponDataLogging, \"error\");\n      } else {\n        swal(\"Logging Updated!\");\n      }\n    }\n    return (\n      <div>\n        <NavbarComponent />\n        <Container>\n          <BackComponent />\n          <h1>Edit Logging</h1>\n          <FormLogging onSubmit={(data) => this.handleSubmit(data)} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(EditLoggingContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"reactstrap\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getLoggingDetail: state.inventorys.getLoggingDetail,\n    errorLoggingDetail: state.inventorys.errorLoggingDetail,\n  };\n};\n\nconst DetailLoggingComponent = (props) => {\n  return (\n    <Table striped>\n      <tbody>\n        <tr>\n          <td width=\"200\">Jumlah</td>\n          <td width=\"10\">:</td>\n          <td>{props.getLoggingDetail.qty}</td>\n        </tr>\n        <tr>\n          <td width=\"200\">Status</td>\n          <td width=\"10\">:</td>\n          <td>{props.getLoggingDetail.status}</td>\n        </tr>\n        <tr>\n          <td width=\"200\">Warehouse</td>\n          <td width=\"10\">:</td>\n          <td>{props.getLoggingDetail.warehouse}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n};\n\nexport default connect(mapStateToProps, null)(DetailLoggingComponent);\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport BackComponent from \"../components/BackComponent\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getLoggingDetail } from \"../actions/inventoryAction\";\nimport DetailLoggingComponent from \"../components/DetailLoggingComponent\";\n\nclass DetailLoggingContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(\n      getLoggingDetail(this.props.match.params.id)\n    );\n  }\n\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <NavbarComponent />\n        <Container>\n          <BackComponent />\n          <h1 align=\"center\">Detail Inventory</h1> <br></br>\n          <DetailLoggingComponent />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect()(DetailLoggingContainer);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from \"reactstrap\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getInventoryDetail: state.inventorys.getInventoryDetail,\n    errorInventoryDetail: state.inventorys.errorInventoryDetail,\n  };\n};\n\nconst DetailInventoryComponent = (props) => {\n  return (\n    <Table striped>\n      <tbody>\n        <tr>\n          <td width=\"200\">Nama</td>\n          <td width=\"10\">:</td>\n          <td>{props.getInventoryDetail.name}</td>\n        </tr>\n        <tr>\n          <td width=\"200\">Jumlah</td>\n          <td width=\"10\">:</td>\n          <td>{props.getInventoryDetail.qty}</td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n};\n\nexport default connect(mapStateToProps, null)(DetailInventoryComponent);\n","import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport BackComponent from \"../components/BackComponent\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getInventoryDetail } from \"../actions/inventoryAction\";\nimport DetailInventoryComponent from \"../components/DetailInventoryComponent\";\n\nclass DetailInventoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(\n      getInventoryDetail(this.props.match.params.logical_uid)\n    );\n  }\n\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <NavbarComponent />\n        <Container>\n          <BackComponent />\n          <h1 align=\"center\">Detail Inventory</h1><br></br>\n          <DetailInventoryComponent />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect()(DetailInventoryContainer);\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Spinner } from \"reactstrap\";\nimport { Button, Col, Container, Row  } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfo } from \"@fortawesome/free-solid-svg-icons\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst { SearchBar } = Search;\n\nconst defaultSorted = [\n  {\n    dataField: \"logical_uid\",\n    order: \"asc\",\n  },\n];\n\nconst mapStateToProps = (state) => {\n  return {\n    getInventoryList: state.inventorys.getInventoryList,\n    errorInventoryList: state.inventorys.errorInventoryList,\n  };\n};\n\nconst TableInventoryLimited = (props) => {\n  const columns = [\n    {\n      dataField: \"logical_uid\",\n      text: \"ID\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"15%\",\n      backgroundColor: '#AB1041' };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Nama\",\n      sort: true,\n      headerStyle: () => {\n        return { \n      backgroundColor: '#AB1041' };\n      },\n    },\n    {\n      dataField: \"qty\",\n      text: \"Jumlah\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"10%\" ,\n        backgroundColor: '#AB1041'};\n      },\n    },\n    {\n      dataField: \"link\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { width: \"30%\",\n        backgroundColor: '#AB1041' };\n      },\n      formatter: (rowContent, row) => {\n        return (\n          <div>\n            <Link to={\"DetailInventory/\" + row.logical_uid}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faInfo} /> Detail\n              </Button>\n            </Link>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Container>\n      {props.getInventoryList ? (\n        <ToolkitProvider\n          bootstrap4\n          keyField=\"logical_uid\"\n          data={props.getInventoryList}\n          columns={columns}\n          defaultSorted={defaultSorted}\n          search\n        >\n          {(props) => (\n            <div>\n              <Row>\n                <Col>\n                  <div className=\"float-right\"><br></br><br></br>\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\n                  </div>\n                </Col>\n              </Row>\n\n              <BootstrapTable\n                {...props.baseProps}\n                pagination={paginationFactory()}\n              />\n            </div>\n          )}\n        </ToolkitProvider>\n      ) : (\n        <div className=\"text-center\">\n          {props.errorInventorysList ? (\n            <h4>{props.errorInventorysList}</h4>\n          ) : (\n            <Spinner color=\"dark\" />\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default connect(mapStateToProps, null)(TableInventoryLimited);\n","import React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Spinner } from \"reactstrap\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfo,\n  faEdit,\n  faTrash,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport { deleteInventory } from \"../actions/inventoryAction\";\nimport \"./Navbar.css\";\n\nconst { SearchBar } = Search;\n\nconst handleClick = (dispatch, logical_uid) => {\n  swal({\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true,\n  }).then((willDelete) => {\n    if (willDelete) {\n      dispatch(deleteInventory(logical_uid));\n      swal(\"Data Inventoruy Sukses dihapus\", {\n        icon: \"success\",\n      });\n    } else {\n      swal(\"Data gagal dihapus\");\n    }\n  });\n};\n\nconst defaultSorted = [\n  {\n    dataField: \"logical_uid\",\n    order: \"asc\",\n  },\n];\n\nconst mapStateToProps = (state) => {\n  return {\n    getInventoryList: state.inventorys.getInventoryList,\n    errorInventoryList: state.inventorys.errorInventoryList,\n  };\n};\n\n<br>\n</br>\n\nconst TableInventoryFullAccess = (props) => {\n  const columns = [\n    {\n      dataField: \"logical_uid\",\n      text: \"ID\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"15%\",\n      backgroundColor: '#AB1041' };\n      },\n    },\n    {\n      dataField: \"name\",\n      text: \"Nama\",\n      sort: true,\n      headerStyle: () => {\n        return { \n      backgroundColor: '#AB1041' };\n      },\n    },\n    {\n      dataField: \"qty\",\n      text: \"Jumlah\",\n      sort: true,\n      headerStyle: () => {\n        return { width: \"10%\" ,\n        backgroundColor: '#AB1041'};\n      },\n    },\n    {\n      dataField: \"link\",\n      text: \"Action\",\n      headerStyle: () => {\n        return { width: \"30%\",\n        backgroundColor: '#AB1041' };\n      },\n      formatter: (rowContent, row) => {\n        return (\n          <div>\n            <Link to={\"DetailInventory/\" + row.logical_uid}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faInfo} /> Detail\n              </Button>\n            </Link>\n\n            <Link to={\"EditInventory/\" + row.logical_uid}>\n              <Button color=\"dark\" className=\"mr-2\">\n                <FontAwesomeIcon icon={faEdit} /> Edit\n              </Button>\n            </Link>\n\n            <Button\n              color=\"dark\"\n              className=\"mr-2\"\n              onClick={() => handleClick(props.dispatch, row.logical_uid)}\n            >\n              <FontAwesomeIcon icon={faTrash} /> Delete\n            </Button>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Container>\n      \n      {props.getInventoryList ? (\n        <ToolkitProvider\n          bootstrap4\n          keyField=\"logical_uid\"\n          data={props.getInventoryList}\n          columns={columns}\n          defaultSorted={defaultSorted}\n          search\n          noDataIndication=\"Table is Empty\"\n        >\n          {(props) => (\n            <div>\n              <br></br><br></br>\n              <Row>\n                <Col>\n                <br></br>\n                  <div className=\"float-right\">\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\n                  </div>\n                </Col>\n              </Row>\n              <br></br>\n              <BootstrapTable \n                {...props.baseProps}\n                pagination={paginationFactory()}\n              />\n              \n            </div>\n          )}\n        </ToolkitProvider>\n      ) : (\n        <div className=\"text-center\">\n          {props.errorInventorysList ? (\n            <h5>{props.errorInventorysList}</h5>\n          ) : (\n            <Spinner color=\"dark\" />\n          )}\n        </div>\n      )}\n    </Container>\n\n);\n};\n\nexport default connect(mapStateToProps, null)(TableInventoryFullAccess);","import React, { Component } from \"react\";\nimport TableInventoryLimited from \"../components/TableInventoryLimited\";\nimport TableInventoryFullAccess from \"../components/TableInventoryFullAccess\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  getInventoryList,\n  deleteDataInventory,\n} from \"../actions/inventoryAction\";\n\n\nclass InventoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    const roleuser = localStorage.getItem(\"roleuser\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n      roleuser,\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getInventoryList());\n    this.props.dispatch(deleteDataInventory());\n  }\n\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.state.roleuser === \"29,30,31,32,33,34,35,36\") {\n      return (\n        <div>\n          <NavbarComponent />\n          <TableInventoryFullAccess />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <NavbarComponent />\n          <TableInventoryLimited />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect()(InventoryContainer);\n","import React, { Component } from \"react\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"reactstrap\";\nimport {Card} from \"react-bootstrap\";\n\n\nclass ProfilContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    const roleuser = localStorage.getItem(\"roleuser\");\n    const nama = localStorage.getItem(\"nama\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n      roleuser,\n      nama,\n    };\n  }\n\n  render() {\n    return (\n      <div align=\"center\"> \n        <NavbarComponent />\n        <Container>\n        <br></br> <br></br> <br></br> <br></br> <br></br>\n        <Card style={{width: \"30rem\" }}>\n           <div class=\"card text-white bg-info mb-3\">\n            <Card.Body className=\"text-center\">\n            <Card.Header>Halo, {this.state.nama}</Card.Header>\n            </Card.Body>\n             </div>\n        </Card>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect()(ProfilContainer);\n","export default __webpack_public_path__ + \"static/media/main.c1401843.jpg\";","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { InputAdornment,Input,InputLabel } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid,Paper, Avatar, TextField, Button} from '@material-ui/core'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockIcon from '@material-ui/icons/Lock';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Image from '../img/main.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n  \n}));\n\n\nconst paperStyle={padding :20,height:'70vh',width:350, margin:\"80px auto\"\n,backgroundImage: `url(${Image})`}\nconst avatarStyle={margin: '20px 0',backgroundColor:'#D35400', width:60,\nheight:60}\nconst btnstyle={margin:'30px 0'}\nconst mystyle = {\n  color: \"black\",\n  padding: \"10px\",\n  fontFamily: \"Arial\"\n};\n\nexport default class LoginContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const data = {\n      username: this.username,\n      password: this.password,\n    };\n    \n    axios\n      .post(\"https://smpnapi.herokuapp.com/token-auth/\", data)\n      .then((res) => {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"roleuser\", res.data.user.user_permissions);\n        localStorage.setItem(\"nama\",res.data.user.username);\n        this.setState({\n          loggedin: true,\n        });\n        window.location.reload(); // BUAT REFRESH PAGE\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  \n\n  \n\n  render() {\n    if (this.state.loggedin) {\n      return <Redirect to=\"/Logging\" />;\n    }\n    return (\n      \n      <Grid>\n        <Paper elevation={15} style={paperStyle}>\n            <Grid align='center'>\n                <Avatar style={avatarStyle} className={useStyles.large}><AccountCircle/></Avatar>\n                <h2 style={mystyle}>Sign In</h2>\n                </Grid>\n                <br></br>\n                <form className={useStyles.margin} onSubmit={this.handleSubmit}>\n                <InputLabel  htmlFor=\"input-with-icon-adornment\" >\n                <h6>username</h6></InputLabel>\n                <Input\n                id=\"input-with-icon-adornment\"\n                startAdornment={\n                <InputAdornment position=\"start\">\n                <AccountCircle/>\n                </InputAdornment>\n                }\n                autoComplete=\"username\"\n                id=\"username\"\n                autoFocus\n                label='Username' \n                name=\"username\"\n\t\t            placeholder='Enter username' \n\t\t            fullWidth required\n                onChange={(e) => (this.username = e.target.value)}/>\n\n                <br></br><br></br>\n               < InputLabel htmlFor=\"input-with-icon-adornment\">\n               <h6> Password</h6></InputLabel>\n                <Input\n                id=\"input-with-icon-adornment\"\n                startAdornment={\n                <InputAdornment position=\"start\">\n                <LockIcon/>\n                </InputAdornment>\n                }\n                 id='password'\n                 label='Password'\n\t\t             placeholder='Enter password' \n              \t type='password' \n                 fullWidth \n                 autoComplete=\"current-password\"\n                 onChange={(e) => (this.password = e.target.value)}\n\t\t             required\n                 />\n                <br></br><br></br>\n                \n                <Button type='submit' color='primary' variant=\"contained\" style={btnstyle} fullWidth>Sign in</Button>\n            \n          </form>\n        \n        </Paper>\n      </Grid>\n    );\n  }\n}\n","import React from \"react\";\nimport { Spinner } from \"reactstrap\";\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return {\n    getInventoryList: state.inventorys.getInventoryList,\n    errorInventoryList: state.inventorys.errorInventoryList,\n    HitungInventory: state.inventorys.getInventoryList.length,\n    HitungLogging: state.inventorys.getLoggingList.length,\n  };\n};\n\nconst AnalitikComponent = (props) => {\n  let x = [];\n  let y = [];\n  let z = [];\n  let a = [];\n  let b = [];\n  let c = [];\n  for (let i = 0; i < props.HitungInventory; i++) {\n    x[i] = props.getInventoryList[i].qty;\n    y[i] = props.getInventoryList[i].name;\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (x[i] < 50) {\n      a[i] = x[i];\n      z[i] = y[i];\n    }\n  }\n\n  for (let i = 0; i < y.length; i++) {\n    if (x[i] > 50) {\n      b[i] = x[i];\n      c[i] = y[i];\n    }\n  }\n\n  return (\n    <Container>\n      {props.getInventoryList ? (\n        <div align=\"center\">\n          <Row>\n         <Col>\n            <br></br><br></br><br></br>\n            <Card style={{width: \"25rem\" }}>\n                  <div class=\"card text-white bg-danger mb-3\">\n                  <Card.Body className=\"text-center\">\n                    <Card.Header>JUMLAH LOGGING</Card.Header>\n                    <Card.Title><h5>{props.HitungLogging}</h5></Card.Title>\n                  </Card.Body>\n                  </div>\n              </Card>\n              \n              <br></br><br></br><br></br>\n             <Card style={{width: \"25rem\" }}>\n                  <div class=\"card text-white bg-danger mb-4\">\n                  <Card.Body className=\"text-center\">\n                    <Card.Header>JUMLAH BARANG YANG DIBAWAH 50</Card.Header>\n                    <Card.Title><h5>{z} : {a}</h5></Card.Title>\n                  </Card.Body>\n                  </div>\n              </Card>\n            \n            \n            <br></br><br></br>\n            <Card style={{width: \"25rem\" }}>\n                  <div class=\"card text-white bg-danger mb-4\">\n                  <Card.Body className=\"text-center\">\n                    <Card.Header>JUMLAH BARANG YANG DIATAS 50</Card.Header>\n                    <Card.Title><h5>{c} : {b}</h5></Card.Title>\n                  </Card.Body>\n                  </div>\n              </Card>\n              </Col>\n            \n          </Row>\n        </div>\n      ) : (\n        <div className=\"text-center\">\n          {props.errorInventoryList ? (\n            <h4>{props.errorInventoryList}</h4>\n          ) : (\n            <Spinner color=\"dark\" />\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default connect(mapStateToProps, null)(AnalitikComponent);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { getLoggingList , getInventoryList } from \"../actions/inventoryAction\";\n\nimport AnalitikComponent from \"../components/AnalitikComponent\";\nimport NavbarComponent from \"../components/NavbarComponent\";\n\n\nclass AnalitikContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n\n    let loggedin = true;\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin,\n    };\n  }\n  componentDidMount() {\n    this.props.dispatch(getLoggingList());\n    this.props.dispatch(getInventoryList());\n  }\n  render() {\n    if (this.state.loggedin === false) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <NavbarComponent />\n        <AnalitikComponent />\n      </div>\n    );\n  }\n}\n\nexport default connect()(AnalitikContainer);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class LogoutContainer extends Component {\n  constructor(props) {\n    super(props);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"roleuser\");\n  }\n  render() {\n    return (\n      <div>\n        <Redirect to=\"/\"></Redirect>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class my404 extends Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <h1>HALAMAN YANG KAMU CARI SALAH</h1>\n        <a href=\"/\">KEMBALI KE 0 YA</a>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n import LoggingContainer from \"./containers/LoggingContainer\";\nimport CreateInventoryContainer from \"./containers/CreateInventoryContainer\";\nimport EditInventoryContainer from \"./containers/EditInventoryContainer\";\nimport EditLoggingContainer from \"./containers/EditLoggingContainer\";\nimport DetailLoggingContainer from \"./containers/DetailLoggingContainer\";\nimport DetailInventoryContainer from \"./containers/DetailInventoryContainer\";\nimport InventoryContainer from \"./containers/InventoryContainer\";\nimport ProfilContainer from \"./containers/ProfilContainer\";\nimport LoginContainer from \"./containers/LoginContainer\";\nimport AnalitikContainer from \"./containers/AnalitikContainer\";\nimport LogoutContainer from \"./containers/LogoutContainer\";\nimport my404 from \"./containers/my404\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const roleuser = localStorage.getItem(\"roleuser\");\n\n    this.state = {\n      roleuser,\n    };\n  }\n\n  render() {\n    if (this.state.roleuser === \"29,30,31,32,33,34,35,36\") {\n      return (\n        <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={LoginContainer} />\n            <Route path=\"/Logging\" exact component={LoggingContainer} />\n            <Route path=\"/Create\" exact component={CreateInventoryContainer} />\n            <Route path=\"/DetailInventory/:logical_uid\" component={DetailInventoryContainer} />\n            <Route path=\"/EditInventory/:logical_uid\" exact component={EditInventoryContainer} />\n            <Route path=\"/EditLogging/:id\" exact component={EditLoggingContainer} />\n            <Route path=\"/DetailLogging/:id\" exact component={DetailLoggingContainer} />\n            <Route path=\"/Inventory\" exact component={InventoryContainer} />\n            <Route path=\"/Analitik\" exact component={AnalitikContainer} />\n            <Route path=\"/Profil\" exact component={ProfilContainer} />\n            <Route path=\"/Logout\" exact component={LogoutContainer} />\n            <Route path=\"*\" exact component={my404} />\n          </Switch>\n        </Router>\n      </div>\n      );\n    } else {\n      return (\n      <div>\n      <Router>\n        <Switch>\n          <Route path=\"/Profil\" exact component={ProfilContainer}/>\n          <Route path=\"/\" exact component={LoginContainer} />\n          <Route path=\"/Logging\" exact component={LoggingContainer} />\n          <Route path=\"/DetailInventory/:logical_uid\" component={DetailInventoryContainer} />\n          <Route path=\"/DetailLogging/:id\" exact component={DetailLoggingContainer} />\n          <Route path=\"/Inventory\" exact component={InventoryContainer} />\n          <Route path=\"/Analitik\" exact component={AnalitikContainer} />\n          <Route path=\"/Logout\" exact component={LogoutContainer} />\n          <Route path=\"*\" exact component={my404} />\n        </Switch>\n      </Router>\n    </div>\n    );\n    }\n\n\n \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  GET_INVENTORY_LIST,\n  GET_INVENTORY_DETAIL,\n  POST_INVENTORY_CREATE,\n  PUT_INVENTORY_EDIT,\n  PUT_LOGGING_EDIT,\n  GET_LOGGING_LIST,\n  GET_LOGGING_DETAIL,\n} from \"../actions/inventoryAction\";\n\nlet initialState = {\n  getInventoryList: false,\n  errorInventoryList: false,\n  getInventoryDetail: false,\n  errorInventoryDetail: false,\n  getResponDataInventory: false,\n  errorResponDataInventory: false,\n  getLoggingList: false,\n  errorLoggingList: false,\n  hitungLogging: false,\n  getLoggingDetail: false,\n  errorLoggingDetail: false,\n  title: \"Pervasive\",\n};\n\nconst inventorys = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_INVENTORY_LIST:\n      return {\n        ...state,\n        getInventoryList: action.payload.data,\n        errorInventoryList: action.payload.errorMessage,\n      };\n    case GET_LOGGING_LIST:\n      return {\n        ...state,\n        getLoggingList: action.payload.data,\n        errorLoggingList: action.payload.errorMessage,\n      };\n    case GET_INVENTORY_DETAIL:\n      return {\n        ...state,\n        getInventoryDetail: action.payload.data,\n        errorInventoryDetail: action.payload.errorMessage,\n      };\n\n    case POST_INVENTORY_CREATE:\n      return {\n        ...state,\n        getResponDataInventory: action.payload.data,\n        errorResponDataInventory: action.payload.errorMessage,\n      };\n\n    case PUT_INVENTORY_EDIT:\n      return {\n        ...state,\n        getResponDataInventory: action.payload.data,\n        errorResponDataInventory: action.payload.errorMessage,\n      };\n\n    case PUT_LOGGING_EDIT:\n      return {\n        ...state,\n        getResponDataLogging: action.payload.data,\n        errorResponDataLogging: action.payload.errorMessage,\n      };\n\n    case GET_LOGGING_DETAIL:\n      return {\n        ...state,\n        getLoggingDetail: action.payload.data,\n        errorLoggingDetail: action.payload.errorMessage,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default inventorys;\n","import { combineReducers } from 'redux'\nimport inventorys from './inventorys'\nimport { reducer as formReducer } from 'redux-form'\n\nexport default combineReducers({\n    inventorys,\n    form: formReducer\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ),\n);\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}